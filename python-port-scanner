import socket
import argparse
from concurrent.futures import ThreadPoolExecutor

def scan_port(host, port):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(1)
            result = s.connect_ex((host, port))
            if result == 0:
                print(f"[+] Port {port} is OPEN")
    except Exception:
        pass

def main():
    parser = argparse.ArgumentParser(description="Simple Python Port Scanner")
    parser.add_argument("--host", help="Target IP or hostname")
    parser.add_argument("--start", type=int, help="Start port")
    parser.add_argument("--end", type=int, help="End port")
    args = parser.parse_args()

    if not all([args.host, args.start, args.end]):
        args.host = input("Enter target host (IP or hostname): ")
        args.start = int(input("Enter start port: "))
        args.end = int(input("Enter end port: "))

    print(f"\nScanning {args.host} ports {args.start}-{args.end}...\n")
    with ThreadPoolExecutor(max_workers=50) as executor:
        for port in range(args.start, args.end + 1):
            executor.submit(scan_port, args.host, port)
    print("\nScan complete.")

if __name__ == "__main__":
    main()
